#!/bin/bash

is_valid_project_name() {
    [[ "$1" =~ ^[_a-zA-Z]+([_a-zA-Z0-9-]?[a-zA-Z0-9]+)*$ ]] 
}

is_valid_package_name() {
    [[ "$1" =~ ^(_[a-zA-Z0-9]|[a-z][_a-zA-Z0-9]?)+(\.(_[a-zA-Z0-9]|[a-z][_a-zA-Z0-9]?)+)*$ ]]
}

# Just provide the functions when running on the test env
[ "$SCRIPT_ENV" = "test" ] && return

while [ 1 ]; do
    printf "Project name (only alphanumeric characters and dashes): "
    read project_name

    is_valid_project_name "$project_name" && break

    echo "Invalid project name. Try again."
done

while [ 1 ]; do
    printf "Base package: "
    read base_package

    is_valid_package_name "$base_package" && break

    echo "Invalid base package. Try again."
done  

[ -d $project_name ] && {
    echo "Directory '$project_name' exists. Remove it and run the script again."
    exit 1
}

if [ "$BRANCH" = "" ]; then
  BRANCH=main
fi

tmp_repo_dir=kotlin-bootstrap-tmp

git clone -b $BRANCH --depth=1 https://github.com/edrd-f/kotlin-bootstrap.git $tmp_repo_dir

cp -r $tmp_repo_dir/template $project_name 
rm -rf $tmp_repo_dir

cd $project_name

function file_replace() {
    local expr="$1"
    shift
    local files="$@"
    local os=$(uname -s)

    if [ "$os" = "Darwin" ]; then
      sed -i "" -e "$expr" $files
    else
      sed -i "$expr" $files
    fi
}

file_replace "s/{{projectName}}/$project_name/" settings.gradle.kts
file_replace "s/{{basePackage}}/$base_package/" \
    modules/application/application.gradle.kts \
    modules/application/src/main/kotlin/Main.kt \
    modules/application/src/test/kotlin/MainTest.kt
